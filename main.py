import asyncio
import time
import os
from datetime import datetime

from selenium import webdriver
from selenium.webdriver.firefox.options import Options
from selenium.webdriver.firefox.service import Service
from selenium.webdriver.common.by import By

from aiogram import Bot
from aiogram.types import FSInputFile

TELEGRAM_BOT_TOKEN = os.getenv('TELEGRAM_BOT_TOKEN')
TELEGRAM_CHAT_ID = os.getenv('TELEGRAM_CHAT_ID')

# ุฅุนุฏุงุฏ ุงูุจูุช (ููุณ ุงูุทุฑููุฉ ุงูุฃุตููุฉ)
bot = Bot(token=TELEGRAM_BOT_TOKEN)

# ุงูุนููุงุช ุงููุทููุจุฉ (ููุณ ุงููุงุฆูุฉ ุงูุฃุตููุฉ)
symbols = ["BTCUSDT", "ETHUSDT", "BNBUSDT", "SOLUSDT", "XRPUSDT"]

def setup_driver():
    """ุฅุนุฏุงุฏ ุงููุชุตูุญ ููุนูู ุนูู ุงูุณูุฑูุฑ"""
    options = Options()
    options.add_argument("--headless")  # ุชุดุบูู ุจุฏูู ูุงุฌูุฉ
    options.add_argument("--no-sandbox")
    options.add_argument("--disable-dev-shm-usage")
    options.add_argument("--disable-gpu")
    options.add_argument("--window-size=1920,1080")  # ููุณ ุงูุญุฌู ุงูุฃุตูู
    options.add_argument("--disable-extensions")
    options.add_argument("--disable-plugins")
    options.add_argument("--disable-web-security")
    options.add_argument("--allow-running-insecure-content")
    
    # ุฅุนุฏุงุฏ ุชูุถููุงุช ูุดุงุจูุฉ ููููุฏ ุงูุฃุตูู
    options.set_preference("layout.css.devPixelsPerPx", "1.0")
    
    service = Service()
    return webdriver.Firefox(service=service, options=options)

async def capture_and_send(symbol, driver):
    """ููุณ ุงููุธููุฉ ุงูุฃุตููุฉ ูุน ุชุญุณููุงุช ููุณูุฑูุฑ"""
    print(f"๐ ุชุญููู ุงูุดุงุฑุช: {symbol}")
    try:
        # ููุณ ุงูุฑุงุจุท ุงูุฃุตูู
        driver.get(f"https://www.tradingview.com/chart/?symbol=BINANCE:{symbol}")
        time.sleep(8)  # ุงูุชุธุงุฑ ุฃุทูู ููููุงู ููุณูุฑูุฑ
        
        # ูุญุงููุฉ ุงูุนุซูุฑ ุนูู ููุทูุฉ ุงูุดุงุฑุช (ููุณ ุงูุทุฑููุฉ ุงูุฃุตููุฉ)
        try:
            chart = driver.find_element(By.CSS_SELECTOR, ".layout__area--center")
        except:
            # ุจุฏูู ูู ุญุงูุฉ ุนุฏู ุงูุนุซูุฑ ุนูู ุงูุนูุตุฑ
            chart = driver.find_element(By.CSS_SELECTOR, ".chart-container")
        
        # ุญูุธ ุงูุตูุฑุฉ ูู ูุฌูุฏ ูุคูุช
        file_name = f"/tmp/{symbol}.png"
        chart.screenshot(file_name)

        # ุฅุฑุณุงู ุงูุตูุฑุฉ (ููุณ ุงูุทุฑููุฉ ุงูุฃุตููุฉ)
        photo = FSInputFile(file_name)
        await bot.send_message(
            chat_id=TELEGRAM_CHAT_ID, 
            text=f"๐ ุดุงุฑุช {symbol} - Renko Monthly"  # ููุณ ุงููุต ุงูุฃุตูู
        )
        await bot.send_photo(chat_id=TELEGRAM_CHAT_ID, photo=photo)

        # ุญุฐู ุงูููู (ููุณ ุงูุทุฑููุฉ ุงูุฃุตููุฉ)
        os.remove(file_name)
        print(f"โ ุชู ุฅุฑุณุงู {symbol}")

    except Exception as e:
        print(f"โ ุฎุทุฃ ูู {symbol}: {e}")

async def main():
    """ููุณ ุงููุธููุฉ ุงูุฑุฆูุณูุฉ ูุน ุชุนุฏููุงุช ุงูุณูุฑูุฑ"""
    print("๐ ุจุฏุก ุชุดุบูู ุจูุช ุงูุดุงุฑุชุงุช...")
    
    driver = setup_driver()
    
    try:
        # ููุณ ุงูุญููุฉ ุงูุฃุตููุฉ
        for symbol in symbols:
            await capture_and_send(symbol, driver)
            time.sleep(2)  # ุงูุชุธุงุฑ ุจูู ุงูุดุงุฑุชุงุช
            
    finally:
        driver.quit()  # ููุณ ุงูุทุฑููุฉ ุงูุฃุตููุฉ
        await bot.session.close()  # ููุณ ุงูุทุฑููุฉ ุงูุฃุตููุฉ
        
    print("โ ุชู ุงูุงูุชูุงุก ูู ุฌููุน ุงูุดุงุฑุชุงุช")

if __name__ == "__main__":
    asyncio.run(main())  # ููุณ ุทุฑููุฉ ุงูุชุดุบูู ุงูุฃุตููุฉ
